.TH deepsea 7
.SH NAME
DeepSea customization
.SH DESCRIPTION
.B SLS
is short for Salt State Files. These files define a state for the minion.  DeepSea has the concept of a 'default' file when salt states are invoked.
For example, to execute a refresh on the pillar run:

.B salt -G 'deepsea:*' state.apply ceph.refresh

Internally this uses

.B /srv/salt/ceph/refresh/init.sls

include:
  - .{{ salt['pillar.get']('refresh_init', 'default') }}

which looks for 'refresh_init' in the pillar. When it's not found, the expression defaults to the name 'default' which is the name of the file in the directory (with the sls file extension).

.B /srv/salt/ceph/refresh/default.sls

refresh_pillar:
  module.run:
    - name: saltutil.refresh_pillar

Salt executes the

.B refresh_pillar

function from the module

.B saltutil.

To change this behavior, add a file to

.B /srv/salt/ceph/refresh

called

.B custom.sls

and fill it with your desired steps. The file can have a more meaningful name, but any default prefixes are reserved for DeepSea.

In order to get your custom state loaded instead of the default one, change or add

.B refresh_init

value by editing

.B /srv/pillar/ceph/stack/global.yml

with

.B refresh_init: custom

To try it:

.B salt -G 'deepsea:*' state.apply ceph.refresh

will now load your custom.sls.

.SH MORE EXAMPLES


DeepSea ships a number of non-default states that can be used. For example we offer alternate orchestrations for Stage 0, which have either updates or reboots (or both) disabled.

To apply those, add

.B stage_prep_minion: default-no-update-no-reboot

.B stage_prep_master: default-no-update-no-reboot

to

.B /srv/pillar/ceph/stack/global.yml

To find all alternate files for the stages, see

.B /srv/salt/ceph/stage/{0..5}/

.SH AUTHOR
Joshua Schmid <jschmid@suse.com>
.SH SEE ALSO
.BR deepsea (1),
.BR deepsea (7),
